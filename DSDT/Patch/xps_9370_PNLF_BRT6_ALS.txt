# Add PNLF
into_all device label PNLF remove_entry;
into device name_adr 0x00020000 insert
begin
Device (PNLF)\n
{\n
    // normal PNLF declares (note some of this probably not necessary)\n
    Name (_ADR, Zero)\n
    Name (_HID, EisaId ("APP0002"))\n
    Name (_CID, "backlight")\n
    Name (_UID, 10)\n
    Name (_STA, 0x0B)\n
    // _BCM/_BQC: set/get for brightness level\n
    Method (_BCM, 1, NotSerialized)\n
    {\n
        // Update backlight via existing DSDT methods\n
        ^^LCD._BCM(Arg0)\n
    }\n
    Method (_BQC, 0, NotSerialized)\n
    {\n
        Return(^^LCD._BQC())\n
    }\n
    Method (_BCL, 0, NotSerialized)\n
    {\n
        Return(^^LCD._BCL())\n
    }\n
    Method (_DOS, 1, NotSerialized)\n
    {\n
        ^^_DOS(Arg0)\n
    }\n
    // extended _BCM/_BQC for setting "in between" levels\n
    Method (XBCM, 1, NotSerialized)\n
    {\n
        // Update backlight via existing DSDT methods\n
        ^^LCD._BCM(Arg0)\n
    }\n
    Method (XBQC, 0, NotSerialized)\n
    {\n
        Return(^^LCD._BQC())\n
    }\n
    // Use XOPT=1 to disable smooth transitions\n
    Name (XOPT, Zero)\n
    // XRGL/XRGH: defines the valid range\n
    Method (XRGL, 0, NotSerialized)\n
    {\n
        Store(_BCL(), Local0)\n
        Store(DerefOf(Index(Local0, 2)), Local0)\n
        Return(Local0)\n
    }\n
    Method (XRGH, 0, NotSerialized)\n
    {\n
        Store(_BCL(), Local0)\n
        Store(DerefOf(Index(Local0, Subtract(SizeOf(Local0), 1))), Local0)\n
        Return(Local0)\n
    }\n
}\n
end;

# BRT6 - brightness key method
into method label BRT6 remove_entry;       
into device label IGPU insert begin
Method (BRT6, 2, NotSerialized)\n
        {\n
            If (LEqual (Arg0, One))\n
            {\n
                Notify (LCD, 0x86)\n
                Notify (^^LPCB.PS2K, 0x10)\n
                Notify (^^LPCB.PS2K, 0x0206)\n
                Notify (^^LPCB.PS2K, 0x0286)\n
            }\n
            If (And (Arg0, 0x02))\n
            {\n
                Notify (LCD, 0x87)\n
                Notify (^^LPCB.PS2K, 0x20)\n
                Notify (^^LPCB.PS2K, 0x0205)\n
                Notify (^^LPCB.PS2K, 0x0285)\n
            }\n
        }\n
end;


#ALSD->ALS0 ALS Device
into device label ALSD set_label begin ALS0 end;
into_all all code_regex ALSD replaceall_matched begin ALS0 end;
into device label ALS0 replace_content
begin
    Device(ALS0)\n
    {\n
        Name(_HID, "ACPI0008")\n
        Name(_CID, "smc-als")\n
        Name(_ALI, 300)\n
        Name(_ALR, Package()\n
        {\n
            //Package() { 70, 0 },\n
            //Package() { 73, 10 },\n
            //Package() { 85, 80 },\n
            Package() { 100, 300 },\n
            //Package() { 150, 1000 },\n
        })\n
    }\n
end;
